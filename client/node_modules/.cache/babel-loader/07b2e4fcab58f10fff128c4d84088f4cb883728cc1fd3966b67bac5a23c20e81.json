{"ast":null,"code":"import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\nimport cartReducer from './cartRedux.js';\nimport userReducer from './userRedux.js';\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nconst persistConfig = {\n  key: 'root',\n  version: 1,\n  storage\n};\nconst rootReducer = combineReducers({\n  cart: cartReducer,\n  user: userReducer\n});\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  })\n});\nexport let persistor = persistStore(store);","map":{"version":3,"names":["configureStore","combineReducers","cartReducer","userReducer","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","storage","persistConfig","key","version","rootReducer","cart","user","persistedReducer","store","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","persistor"],"sources":["/Users/sagnikchakraborty/Desktop/shop/client/src/redux/store.js"],"sourcesContent":["import {configureStore,combineReducers} from \"@reduxjs/toolkit\";\nimport  cartReducer from './cartRedux.js'; \nimport userReducer from './userRedux.js';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'  \n \n\nconst persistConfig = {\n    key: 'root',\n    version: 1,\n    storage,\n}\n\nconst rootReducer=combineReducers({cart:cartReducer,user:userReducer})\n  \nconst persistedReducer = persistReducer(persistConfig,rootReducer)\n  \n \n\nexport const store=configureStore({\n    reducer:persistedReducer,\n    middleware: (getDefaultMiddleware) =>  \n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n})\n\n\nexport let persistor=persistStore(store)\n"],"mappings":"AAAA,SAAQA,cAAc,EAACC,eAAe,QAAO,kBAAkB;AAC/D,OAAQC,WAAW,MAAM,gBAAgB;AACzC,OAAOC,WAAW,MAAM,gBAAgB;AACxC,SACEC,YAAY,EACZC,cAAc,EACdC,KAAK,EACLC,SAAS,EACTC,KAAK,EACLC,OAAO,EACPC,KAAK,EACLC,QAAQ,QACH,eAAe;AACtB,OAAOC,OAAO,MAAM,2BAA2B;AAG/C,MAAMC,aAAa,GAAG;EAClBC,GAAG,EAAE,MAAM;EACXC,OAAO,EAAE,CAAC;EACVH;AACJ,CAAC;AAED,MAAMI,WAAW,GAACf,eAAe,CAAC;EAACgB,IAAI,EAACf,WAAW;EAACgB,IAAI,EAACf;AAAW,CAAC,CAAC;AAEtE,MAAMgB,gBAAgB,GAAGd,cAAc,CAACQ,aAAa,EAACG,WAAW,CAAC;AAIlE,OAAO,MAAMI,KAAK,GAACpB,cAAc,CAAC;EAC9BqB,OAAO,EAACF,gBAAgB;EACxBG,UAAU,EAAGC,oBAAoB,IACjCA,oBAAoB,CAAC;IACnBC,iBAAiB,EAAE;MACjBC,cAAc,EAAE,CAACnB,KAAK,EAAEC,SAAS,EAAEC,KAAK,EAAEC,OAAO,EAAEC,KAAK,EAAEC,QAAQ;IACpE;EACF,CAAC;AACL,CAAC,CAAC;AAGF,OAAO,IAAIe,SAAS,GAACtB,YAAY,CAACgB,KAAK,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}