{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nimport cartReducer from './cartRedux.js';\nimport userReducer from './userRedux.js';\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { modalUnstyledClasses } from \"@mui/material\";\nconst persistConfig = {\n  key: 'root',\n  version: 1,\n  storage\n};\nconst persistedReducer = persistReducer(persistConfig, userReducer);\nconst store = () => configureStore({\n  reducer: {\n    cart: cartReducer,\n    user: persistedReducer\n  },\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  })\n});\nexport default store;\nexport let persistor = persistStore(store);","map":{"version":3,"names":["configureStore","cartReducer","userReducer","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","storage","modalUnstyledClasses","persistConfig","key","version","persistedReducer","store","reducer","cart","user","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","persistor"],"sources":["/Users/sagnikchakraborty/Desktop/shop/client/src/redux/store.js"],"sourcesContent":["import {configureStore} from \"@reduxjs/toolkit\";\nimport  cartReducer from './cartRedux.js'; \nimport userReducer from './userRedux.js';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'  \nimport { modalUnstyledClasses } from \"@mui/material\";\n\nconst persistConfig = {\n    key: 'root',\n    version: 1,\n    storage,\n  }\n  \n  const persistedReducer = persistReducer(persistConfig,userReducer)\n  \n \n\nconst store=()=>configureStore({\n    reducer:{\n        cart:cartReducer,\n        user:persistedReducer,\n    },\n    middleware: (getDefaultMiddleware) =>  \n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n})\n\nexport default store;\nexport let persistor=persistStore(store)\n"],"mappings":"AAAA,SAAQA,cAAc,QAAO,kBAAkB;AAC/C,OAAQC,WAAW,MAAM,gBAAgB;AACzC,OAAOC,WAAW,MAAM,gBAAgB;AACxC,SACEC,YAAY,EACZC,cAAc,EACdC,KAAK,EACLC,SAAS,EACTC,KAAK,EACLC,OAAO,EACPC,KAAK,EACLC,QAAQ,QACH,eAAe;AACtB,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,SAASC,oBAAoB,QAAQ,eAAe;AAEpD,MAAMC,aAAa,GAAG;EAClBC,GAAG,EAAE,MAAM;EACXC,OAAO,EAAE,CAAC;EACVJ;AACF,CAAC;AAED,MAAMK,gBAAgB,GAAGZ,cAAc,CAACS,aAAa,EAACX,WAAW,CAAC;AAIpE,MAAMe,KAAK,GAACA,CAAA,KAAIjB,cAAc,CAAC;EAC3BkB,OAAO,EAAC;IACJC,IAAI,EAAClB,WAAW;IAChBmB,IAAI,EAACJ;EACT,CAAC;EACDK,UAAU,EAAGC,oBAAoB,IACjCA,oBAAoB,CAAC;IACnBC,iBAAiB,EAAE;MACjBC,cAAc,EAAE,CAACnB,KAAK,EAAEC,SAAS,EAAEC,KAAK,EAAEC,OAAO,EAAEC,KAAK,EAAEC,QAAQ;IACpE;EACF,CAAC;AACL,CAAC,CAAC;AAEF,eAAeO,KAAK;AACpB,OAAO,IAAIQ,SAAS,GAACtB,YAAY,CAACc,KAAK,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}